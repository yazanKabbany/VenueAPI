// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VenuesApi.Models;

namespace VenuesApi.Migrations
{
    [DbContext(typeof(VenuesDbContext))]
    partial class VenuesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("VenuesApi.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("VenuesApi.Models.Reservation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerID");

                    b.Property<string>("EventName")
                        .IsRequired();

                    b.Property<int>("NumberOfPeople");

                    b.Property<int>("VenueID");

                    b.Property<DateTime>("day");

                    b.HasKey("id");

                    b.HasIndex("CustomerID");

                    b.HasIndex("VenueID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("VenuesApi.Models.Venue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("Capacity");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Privacy");

                    b.Property<int>("Type");

                    b.HasKey("id");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("VenuesApi.Models.Reservation", b =>
                {
                    b.HasOne("VenuesApi.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VenuesApi.Models.Venue", "Venue")
                        .WithMany("Reservations")
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
